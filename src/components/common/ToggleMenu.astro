---
export interface Props {
  label?: string;
  class?: string;
}

const {
  label = 'Toggle Menu',
  class: className = 'flex flex-col h-12 w-12 rounded justify-center items-center cursor-pointer group',
} = Astro.props;
---

<button type="button" class={className} aria-label={label} data-aw-toggle-menu>
  <span class="sr-only">{label}</span>
  <slot>
    <span
      aria-hidden="true"
      class="h-0.5 w-6 my-1 rounded-full bg-black dark:bg-white transition ease transform duration-200 opacity-80 group-[.expanded]:rotate-45 group-[.expanded]:translate-y-2.5"
    ></span>
    <span
      aria-hidden="true"
      class="h-0.5 w-6 my-1 rounded-full bg-black dark:bg-white transition ease transform duration-200 opacity-80 group-[.expanded]:opacity-0"
    ></span>
    <span
      aria-hidden="true"
      class="h-0.5 w-6 my-1 rounded-full bg-black dark:bg-white transition ease transform duration-200 opacity-80 group-[.expanded]:-rotate-45 group-[.expanded]:-translate-y-2.5"
    ></span>
  </slot>
</button>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const toggleMenuBtn = document.querySelector('[data-aw-toggle-menu]');
    const menu = document.querySelector('#nav-menu'); // This should be the id of your <nav> element in Header.astro

    if (!toggleMenuBtn || !menu) {
      return;
    }

    let isExpanded = toggleMenuBtn.classList.contains('expanded');

    const toggleMenu = () => {
      isExpanded = !isExpanded;
      toggleMenuBtn.setAttribute('aria-expanded', String(isExpanded));
      toggleMenuBtn.classList.toggle('expanded'); // Toggles the animation for the icon
      menu.classList.toggle('hidden'); // Toggles the visibility of the nav menu
    };

    toggleMenuBtn.addEventListener('click', toggleMenu);

    document.addEventListener('click', (event) => {
      if (!isExpanded) {
        return;
      }

      const isClickInsideMenu = menu.contains(event.target as Node);
      const isClickOnToggleButton = toggleMenuBtn.contains(event.target as Node);

      if (!isClickInsideMenu && !isClickOnToggleButton) {
        toggleMenu();
      }
    });

    document.addEventListener('keydown', (event) => {
      if (isExpanded && event.key === 'Escape') {
        toggleMenu();
      }
    });
  });
</script>
